-- 1. What happens when you initialise a repository? Why do you need to do it?

When you initialise a repository, a hidden metadata file called .git
is created to keep track of the history of the repository. You need to
do this to make sure this directory becomes a repository which contains
history data.


-- 2. How is the staging area different from the working directory and
the repository? What value do you think it offers?

The staging area provides an intermediate area where you can specify exactly
which changes you would like to commit. It offers more control over
the changes to be committed, rather than just allows you to commit all changes
at once.


-- 3. How can you use the staging area to make sure
you have one commit per logical change?

Logical changes are determined by programmers. To have one commit per logical
change, programmers should specify in the staging area which changes
(together as a logical change) to be committed. Then, programmers can commit
the logical change in the staging area.


-- 4. What are some situations when branches would be helpful
in keeping your history organized? How would branches help?

When you want to experiment a new feature, or try a new version,
you can create a new branch to represent the commits in these new
situations. You can easily check out different branches to show code
in different situations while maintaining code in those different
situations.


-- 5. How do the diagrams help you visualize the branch structure?

It separates all commits according to their branches. Also,
it shows the commits from which the new branches are created, and thus
links all branches together. 
