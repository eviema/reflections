When would you want to use a remote repository rather than keeping all your work
local?

    You use a remote repository when you want to share your work with others
    and/or allow others to contribute to your work.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You want to pull changes from the remote repository only if you're sure
    you want those changes to be added to your local repository. Automatic
    pulling can't determine that for you.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are used on GitHub when you don't have the permission to modify
    someone else's repository but want to build on that repository and
    make changes. You fork a branch of the other person's repository so that
    you have a copy on your GitHub account from which you can work
    to make changes.

    Clones are used to copy a branch of a repository that is either
    on GitHub or on your local computer to your local computer.

    Branches are commit chains with different commit histories. You can access
    a particular commit/version of your program by checkout a branch and
    checkout a commit in there.


What is the benefit of having a copy of the last known state of the remote
stored locally?

    So that when a collaborator makes new changes on GitHub, we can fetch
    the remote with this latest commit and update the local remote. Then we
    can use the updated local remote to compare with changes made locally and
    merge all the changes, or in other words, finalise pulling.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    If I don't use Git or GitHub to collaborate, I'd probably change and make
    comments in individual files and send them over to collaborators for
    review. This would work if there aren't too many files to make changes
    and there aren't too many changes to make. However, using Git and GitHub
    makes collaboration over modifications more organised and easy to do by
    just using command line and text editor rather than, say, also sending
    modified files to collaborators via email.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    I want to make changes in a separate branch when the current master branch
    is working well and I want to add a new feature or make some modifications
    without risking to lose the working version. Also, creating a separate
    branch and sharing it with collaborators on GitHub allows me to get feedback
    on the changes that I've made. If we're sure the changes are good, one
    of us can merge the separate branch into master and have a new working
    version of production quality. 
